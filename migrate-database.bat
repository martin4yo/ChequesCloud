@echo off
echo ============================================
echo   MIGRACI√ìN COMPLETA DE BASE DE DATOS
echo   Local ‚Üí Producci√≥n
echo ============================================
echo.

echo Este script realizar√°:
echo 1. Backup de la base de datos local
echo 2. Restauraci√≥n en producci√≥n
echo 3. Verificaci√≥n de los datos
echo.

set /p confirm=¬øContinuar con la migraci√≥n completa? (S/N):
if /i not "%confirm%"=="S" (
    echo Migraci√≥n cancelada
    pause
    exit /b 0
)

echo.
echo ============================================
echo   PASO 1: BACKUP DE BASE DE DATOS LOCAL
echo ============================================

REM Configuracion local
set LOCAL_HOST=localhost
set LOCAL_PORT=5432
set LOCAL_DB=chequescloud
set LOCAL_USER=postgres
set LOCAL_PASSWORD=Q27G4B98

REM Crear directorio para backups
if not exist "database-backups" mkdir database-backups

REM Generar timestamp para nombres √∫nicos
for /f "tokens=2 delims==" %%a in ('wmic OS Get localdatetime /value') do set "dt=%%a"
set "timestamp=%dt:~0,4%-%dt:~4,2%-%dt:~6,2%_%dt:~8,2%-%dt:~10,2%-%dt:~12,2%"
set "backup_file=database-backups\chequescloud_migration_%timestamp%.sql"

echo Generando backup: %backup_file%
set PGPASSWORD=%LOCAL_PASSWORD%
pg_dump -h %LOCAL_HOST% -p %LOCAL_PORT% -U %LOCAL_USER% -d %LOCAL_DB% -f "%backup_file%" --verbose --clean --if-exists

if %ERRORLEVEL% NEQ 0 (
    echo ‚ùå ERROR: Fall√≥ el backup de la base de datos local
    pause
    exit /b 1
)

echo ‚úÖ Backup local completado

echo.
echo ============================================
echo   PASO 2: CONFIGURAR CONEXI√ìN A PRODUCCI√ìN
echo ============================================

set PROD_HOST=149.50.148.198
set PROD_PORT=5432
set PROD_DB=chequescloud
set PROD_USER=postgres

echo Host de producci√≥n: %PROD_HOST%:%PROD_PORT%
echo Base de datos: %PROD_DB%
echo Usuario: %PROD_USER%
echo.

set /p PROD_PASSWORD=Ingresa la contrase√±a de PostgreSQL de producci√≥n:

echo.
echo Probando conexi√≥n...
set PGPASSWORD=%PROD_PASSWORD%
psql -h %PROD_HOST% -p %PROD_PORT% -U %PROD_USER% -d %PROD_DB% -c "SELECT version();" > nul 2>&1

if %ERRORLEVEL% NEQ 0 (
    echo ‚ùå ERROR: No se puede conectar a la base de datos de producci√≥n
    echo.
    echo Verifica:
    echo - El servidor %PROD_HOST% est√° accesible
    echo - PostgreSQL est√° corriendo en puerto %PROD_PORT%
    echo - Las credenciales son correctas
    echo - El firewall permite la conexi√≥n
    pause
    exit /b 1
)

echo ‚úÖ Conexi√≥n a producci√≥n exitosa

echo.
echo ============================================
echo   PASO 3: VERIFICAR DATOS EXISTENTES
echo ============================================

echo Datos actuales en producci√≥n:
for %%t in (usuarios bancos chequeras cheques) do (
    for /f %%r in ('psql -h %PROD_HOST% -p %PROD_PORT% -U %PROD_USER% -d %PROD_DB% -t -c "SELECT COUNT(*) FROM %%t;" 2^>nul') do (
        echo - %%t: %%r registros
    )
)

echo.
echo ‚ö†Ô∏è  ADVERTENCIA: La restauraci√≥n borrar√° TODOS los datos existentes en producci√≥n
echo.
set /p final_confirm=¬øContinuar con la restauraci√≥n? (S/N):

if /i not "%final_confirm%"=="S" (
    echo Migraci√≥n cancelada
    echo El backup se cre√≥ en: %backup_file%
    pause
    exit /b 0
)

echo.
echo ============================================
echo   PASO 4: RESTAURANDO BASE DE DATOS
echo ============================================

echo Restaurando desde: %backup_file%
echo Destino: %PROD_HOST%:%PROD_PORT%/%PROD_DB%
echo.
echo Esto puede tomar varios minutos...

psql -h %PROD_HOST% -p %PROD_PORT% -U %PROD_USER% -d %PROD_DB% -f "%backup_file%" --quiet

if %ERRORLEVEL% NEQ 0 (
    echo ‚ùå ERROR: La restauraci√≥n fall√≥
    echo.
    echo El archivo de backup se conserva en: %backup_file%
    echo Revisa los logs para m√°s detalles
    pause
    exit /b 1
)

echo ‚úÖ Restauraci√≥n completada

echo.
echo ============================================
echo   PASO 5: VERIFICACI√ìN FINAL
echo ============================================

echo Verificando datos migrados:
echo.

for %%t in (usuarios bancos chequeras cheques) do (
    for /f %%r in ('psql -h %PROD_HOST% -p %PROD_PORT% -U %PROD_USER% -d %PROD_DB% -t -c "SELECT COUNT(*) FROM %%t;" 2^>nul') do (
        echo - %%t: %%r registros
    )
)

echo.
echo Verificando integridad de datos...

REM Verificar que las relaciones est√©n intactas
for /f %%r in ('psql -h %PROD_HOST% -p %PROD_PORT% -U %PROD_USER% -d %PROD_DB% -t -c "SELECT COUNT(*) FROM cheques c JOIN chequeras ch ON c.chequeraId = ch.id JOIN bancos b ON ch.bancoId = b.id;" 2^>nul') do (
    echo - Relaciones intactas: %%r cheques con banco y chequera v√°lidos
)

echo.
echo ============================================
echo   MIGRACI√ìN COMPLETADA EXITOSAMENTE
echo ============================================
echo.
echo ‚úÖ Base de datos migrada exitosamente
echo üìÅ Backup guardado en: %backup_file%
echo üåê Producci√≥n: %PROD_HOST%:%PROD_PORT%/%PROD_DB%
echo.
echo PR√ìXIMOS PASOS:
echo 1. Iniciar la aplicaci√≥n en producci√≥n
echo 2. Verificar que el login funcione
echo 3. Probar la funcionalidad completa
echo.
echo Para iniciar en producci√≥n ejecuta:
echo   start-production.bat
echo.
pause